entire sentence: , Get the ice cream and the syrup from the counter   and put it on the plate   , ,  Then get the mug with coffee in it   and also place it by the plate with the ice cream and syrup   , 

<start clause>
start env: 0
end env: 3
sent: Get the ice cream and the syrup from the counter  
clause dscr: Get [   ice cream |   syrup |   counter | relation: (3, 3){ ice cream x  syrup -> and}{ ice cream x  counter -> from}{ syrup x  counter -> from} ]
words: Get ice cream syrup counter and from from
verb: Get
arg mapping: (ice cream,IceCream_1) (syrup,Syrup_1) (syrup,Syrup_2) (counter,Counter_1)
<end clause>

<start clause>
start env: 6
end env: 5
sent:  and put it on the plate  
clause dscr: put [   it |   plate | relation: (2, 2){ it x  plate -> on} ]
words: put it plate on
verb: put
arg mapping: (it,IceCream_1) (it,Syrup_1) (plate,Plate_1) (plate,Plate_2)
<end clause>

<start clause>
start env: 6
end env: 7
sent:  . Then get the mug with coffee in it  
clause dscr: get [   mug |   coffee |   it | relation: (3, 3){ mug x  coffee -> with}{ mug x  it -> with}{ coffee x  it -> in} ]
words: get mug coffee it with with in
verb: get
arg mapping: (mug,Mug_1) (coffee,Mug_1) (it,IceCream_1) (it,Syrup_1)
<end clause>

<start clause>
start env: 8
end env: 7
sent:  and also place it by the plate with the ice cream and syrup  
clause dscr: place [   it |   plate |   ice |   cream |   syrup | relation: (5, 5){ it x  plate -> by}{ it x  ice -> by}{ it x  cream -> by}{ it x  syrup -> by}{ plate x  ice -> with}{ plate x  cream -> with}{ plate x  syrup -> with}{ ice x  cream -> and}{ ice x  syrup -> and}{ cream x  syrup -> and} ]
words: place it plate ice cream syrup by by by by with with with and and and
verb: place
arg mapping: (it,Mug_1) (it,IceCream_1) (it,Syrup_1) (plate,Plate_1) (plate,Plate_2) (ice,IceCream_1) (ice,IceCreamScoop) (cream,IceCream_1) (cream,IceCreamScoop) (syrup,Syrup_1) (syrup,Syrup_2)
<end clause>
