entire sentence: , Grasp the vanilla syrup bottle   ,  Open the fridge door   and place the bottle inside the fridge   , ,  Close the fridge door   ,  Empty the contents of the mug into the sink   and clean the sink with the running water   , ,  Place the instant ramen, ramen,   and salt bottle into their designated pantries   

<start clause>
start env: 0
end env: 1
sent: Grasp the vanilla syrup bottle  
clause dscr: Grasp [   vanilla syrup bottle | relation: Null ]
words: Grasp vanilla syrup bottle
verb: Grasp
arg mapping: (vanilla syrup bottle,Syrup_1) (vanilla syrup bottle,Syrup_2)
<end clause>

<start clause>
start env: 2
end env: 3
sent:  . Open the fridge door  
clause dscr: Open [   door | relation: Null ]
words: Open door
verb: Open
arg mapping: (door,MicrowaveDoor) (door,FridgeLeftDoor) (door,FridgeRightDoor)
<end clause>

<start clause>
start env: 4
end env: 4
sent:  and place the bottle inside the fridge  
clause dscr: place [   bottle |   fridge | relation: (2, 2){ bottle x  fridge -> inside} ]
words: place bottle fridge inside
verb: place
arg mapping: (fridge,Fridge)
<end clause>

<start clause>
start env: 5
end env: 5
sent:  . Close the fridge door  
clause dscr: Close [   door | relation: Null ]
words: Close door
verb: Close
arg mapping: (door,MicrowaveDoor) (door,FridgeLeftDoor) (door,FridgeRightDoor)
<end clause>

<start clause>
start env: 29
end env: 28
sent:  . Carry Glass1, long cup1, Mug, Long Cup2, pot, and spoon near the sink . Empty the contents of the mug into the sink  
clause dscr: Empty [   Glass1 |   cup1 |   Mug |   Cup2 |   pot |   spoon |   sink |   contents |   mug |   sink | relation: (10, 10){ Glass1 x  cup1 -> ,}{ Glass1 x  Mug -> ,}{ Glass1 x  Cup2 -> ,}{ Glass1 x  pot -> ,}{ Glass1 x  spoon -> ,}{ Glass1 x  sink -> ,}{ Glass1 x  contents -> ,}{ Glass1 x  mug -> ,}{ Glass1 x  sink -> ,}{ cup1 x  Mug -> ,}{ cup1 x  Cup2 -> ,}{ cup1 x  pot -> ,}{ cup1 x  spoon -> ,}{ cup1 x  sink -> ,}{ cup1 x  contents -> ,}{ cup1 x  mug -> ,}{ cup1 x  sink -> ,}{ Mug x  Cup2 -> ,}{ Mug x  pot -> ,}{ Mug x  spoon -> ,}{ Mug x  sink -> ,}{ Mug x  contents -> ,}{ Mug x  mug -> ,}{ Mug x  sink -> ,}{ Cup2 x  pot -> ,}{ Cup2 x  spoon -> ,}{ Cup2 x  sink -> ,}{ Cup2 x  contents -> ,}{ Cup2 x  mug -> ,}{ Cup2 x  sink -> ,}{ pot x  spoon -> ,}{ pot x  sink -> ,}{ pot x  contents -> ,}{ pot x  mug -> ,}{ pot x  sink -> ,}{ spoon x  sink -> near}{ spoon x  contents -> near}{ spoon x  mug -> near}{ spoon x  sink -> near}{ sink x  contents -> of}{ sink x  mug -> of}{ sink x  sink -> of}{ contents x  mug -> of}{ contents x  sink -> of}{ mug x  sink -> into} ]
words: Empty Glass1 cup1 Mug Cup2 pot spoon sink contents mug sink , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , near near near near of of of of of into
verb: Empty
arg mapping: (Glass1,Glass_1) (cup1,LongCup_1) (cup1,LongCup_2) (Mug,Mug_1) (Cup2,LongCup_1) (Cup2,LongCup_2) (pot,Kettle) (spoon,Spoon_1) (sink,Sink) (mug,Mug_1) (sink,Sink)
<end clause>

<start clause>
start env: 29
end env: 29
sent:  and clean the sink with the running water  
clause dscr: clean [   sink |   water | relation: (2, 2){ sink x  water -> with} ]
words: clean sink water with
verb: clean
arg mapping: (sink,Sink)
<end clause>

<start clause>
start env: 30
end env: 35
sent:  . Place the instant ramen, ramen,  
clause dscr: Place [   ramen |   ramen | relation: (2, 2){ ramen x  ramen -> ,} ]
words: Place ramen ramen ,
verb: Place
arg mapping: (ramen,Ramen_1) (ramen,Ramen_1)
<end clause>

<start clause>
start env: 37
end env: 36
sent:  and salt bottle into their designated pantries  
clause dscr: bottle [   salt |   pantries | relation: (2, 2){ salt x  pantries -> into} ]
words: bottle salt pantries into
verb: bottle
arg mapping: (salt,Salt_1)
<end clause>
