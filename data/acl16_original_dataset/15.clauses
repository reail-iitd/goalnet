entire sentence: , Take boiled egg from fridge   ,  Peel   and throw out shell   , ,  Put on plate   ,  Take plate along with the mug with coffee in it to hungry person   

<start clause>
start env: 0
end env: 4
sent: Take boiled egg from fridge  
clause dscr: Take [   egg |   fridge | relation: (2, 2){ egg x  fridge -> from} ]
words: Take egg fridge from
verb: Take
arg mapping: (egg,BoiledEgg_1) (fridge,Fridge)
<end clause>

<start clause>
start env: 5
end env: 4
sent:  and throw out shell  
clause dscr: throw [   shell | relation: Null ]
words: throw shell
verb: throw
arg mapping: 
<end clause>

<start clause>
start env: 5
end env: 4
sent:  . Put on plate  
clause dscr: Put [   plate | relation: Null ]
words: Put plate
verb: Put
arg mapping: (plate,Plate_1) (plate,Plate_2)
<end clause>

<start clause>
start env: 6
end env: 10
sent:  . Take plate along with the mug with coffee in it to hungry person  
clause dscr: Take [   plate |   mug |   coffee |   it |   person | relation: (5, 5){ plate x  mug -> along}{ plate x  coffee -> along}{ plate x  it -> along}{ plate x  person -> along}{ mug x  coffee -> with}{ mug x  it -> with}{ mug x  person -> with}{ coffee x  it -> in}{ coffee x  person -> in}{ it x  person -> to} ]
words: Take plate mug coffee it person along along along along with with with in in to
verb: Take
arg mapping: (plate,Plate_1) (plate,Plate_2) (mug,Mug_1) (coffee,Mug_1) (coffee,LongCup_1) (it,Fridge) (it,FridgeLeftDoor) (it,FridgeRightDoor) (it,BoiledEgg_1) (person,Counter_1)
<end clause>
