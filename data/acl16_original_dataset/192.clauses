entire sentence: , take pot over to the sink,   turn on the tap, and fill with water turn on the tap,   and fill with water   , , , , ,  Turn off the water   ,  Take pot over to stove,   place on any burner, and turn on the fire for that burner place on any burner,   and turn on the fire for that burner   , , , , ,  Wait   ,  Once there is steam rising and bubbles,   turn off fire   , 

<start clause>
start env: 0
end env: 6
sent: take pot over to the sink,  
clause dscr: take [ relation: Null ]
words: take
verb: take
arg mapping: 
<end clause>

<start clause>
start env: 7
end env: 7
sent:  turn on the tap, and fill with water turn on the tap,  
clause dscr: turn [   tap |   fill |   water |   turn |   tap | relation: (5, 5){ tap x  fill -> ,}{ tap x  water -> ,}{ tap x  turn -> ,}{ tap x  tap -> ,}{ fill x  water -> with}{ fill x  turn -> with}{ fill x  tap -> with}{ water x  turn -> on}{ water x  tap -> on}{ turn x  tap -> on} ]
words: turn tap fill water turn tap , , , , with with with on on on
verb: turn
arg mapping: (tap,Plate_1) (tap,Plate_2) (tap,Plate_1) (tap,Plate_2)
<end clause>

<start clause>
start env: 10
end env: 9
sent:  and fill with water  
clause dscr: fill [   water | relation: Null ]
words: fill water
verb: fill
arg mapping: (water,Kettle)
<end clause>

<start clause>
start env: 10
end env: 9
sent:  . Turn off the water  
clause dscr: Turn [   water | relation: Null ]
words: Turn water
verb: Turn
arg mapping: (water,Kettle)
<end clause>

<start clause>
start env: 8
end env: 11
sent:  . Take pot over to stove,  
clause dscr: Take [ relation: Null ]
words: Take
verb: Take
arg mapping: 
<end clause>

<start clause>
start env: 19
end env: 18
sent:  place on any burner, and turn on the fire for that burner place on any burner,  
clause dscr: place [   burner |   turn |   fire |   burner |   place |   burner | relation: (6, 6){ burner x  turn -> ,}{ burner x  fire -> ,}{ burner x  burner -> ,}{ burner x  place -> ,}{ burner x  burner -> ,}{ turn x  fire -> on}{ turn x  burner -> on}{ turn x  place -> on}{ turn x  burner -> on}{ fire x  burner -> for}{ fire x  place -> for}{ fire x  burner -> for}{ burner x  place -> on}{ burner x  burner -> on}{ place x  burner -> on} ]
words: place burner turn fire burner place burner , , , , , on on on on for for for on on on
verb: place
arg mapping: (fire,StoveFire_1) (fire,StoveFire_2) (fire,StoveFire_3) (fire,StoveFire_4)
<end clause>

<start clause>
start env: 19
end env: 19
sent:  and turn on the fire for that burner  
clause dscr: turn [   fire |   burner | relation: (2, 2){ fire x  burner -> for} ]
words: turn fire burner for
verb: turn
arg mapping: (fire,StoveFire_1) (fire,StoveFire_2) (fire,StoveFire_3) (fire,StoveFire_4)
<end clause>

<start clause>
start env: 19
end env: 18
sent:  . Wait  
clause dscr: Wait [ relation: Null ]
words: Wait
verb: Wait
arg mapping: 
<end clause>

<start clause>
start env: 19
end env: 18
sent:  turn off fire  
clause dscr: turn [   fire | relation: Null ]
words: turn fire
verb: turn
arg mapping: (fire,StoveFire_1) (fire,StoveFire_2) (fire,StoveFire_3) (fire,StoveFire_4)
<end clause>
