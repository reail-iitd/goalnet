(define 
(problem tmp) 
(:objects cd_1 armchair_4 loveseat_2 plate_1 pillow_2 armchair_2 bowl_1 armchair_1 coffeetable_1 book_2 bagofchips_1 pillow_1 cd_2 xbox_1 studytable_1 coke_1 snacktable_1 tv_1 garbagebin_1 armchair_3 garbagebag_1 shelf_1 loveseat_1 tv_1remote_1 shelf_2 pillow_3 beer_1 xboxcontroller_1 pillow_4 book_1 book_3 robot ) 
(:init (on plate_1 loveseat_1) (isgraspable bagofchips_1) (isgraspable beer_1) (on cd_2 shelf_1) (on book_2 loveseat_1) (isgraspable plate_1) (on pillow_2 shelf_1) (state tv_1 channel3) (on xbox_1 loveseat_1) (isgraspable garbagebag_1) (state bagofchips_1 haschips) (on bagofchips_1 armchair_4) (isgraspable coke_1) (state cd_2 cd) (state tv_1 volume) (isgraspable pillow_4) (isgraspable pillow_2) (isgraspable book_1) (isgraspable book_2) (on book_1 armchair_3) (on beer_1 coffeetable_1) (on pillow_4 shelf_1) (isgraspable garbagebin_1) (near robot coffeetable_1) (state cd_1 cd) (isgraspable pillow_3) (on pillow_3 shelf_1) (on xboxcontroller_1 loveseat_1) (isgraspable pillow_1) (state bagofchips_1 isopen) (near robot loveseat_1) (on garbagebin_1 garbagebin_1) (isgraspable cd_1) (in garbagebag_1 garbagebag_1) (on coke_1 coffeetable_1) (isgraspable xbox_1) (on tv_1remote_1 loveseat_1) (isgraspable tv_1remote_1) (isgraspable xboxcontroller_1) (on pillow_1 shelf_1) (isgraspable cd_2) (on cd_1 loveseat_1) ) 
(:goal (AND (on pillow_1 loveseat_1) )) 
)